// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductManagement.Data;

#nullable disable

namespace ProductManagement.Migrations
{
    [DbContext(typeof(ProductDbContext))]
    [Migration("20231112171531_categorylist")]
    partial class categorylist
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProductManagement.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3dda4c07-27bf-45d9-95ea-1350c4ddd971"),
                            Name = "Mac"
                        },
                        new
                        {
                            Id = new Guid("c2c74b01-69fd-4440-a8c1-11217e6ff9b7"),
                            Name = "iPad"
                        },
                        new
                        {
                            Id = new Guid("2bd55ae7-2979-48e6-b2d5-c26c6dc18647"),
                            Name = "iPhone"
                        },
                        new
                        {
                            Id = new Guid("0feff3cb-c005-422d-b5c0-cfbeae3582fb"),
                            Name = "Watch"
                        },
                        new
                        {
                            Id = new Guid("9825536e-74ee-4bdb-bd0b-47b1afb2867f"),
                            Name = "AirPods"
                        },
                        new
                        {
                            Id = new Guid("ebe6d95a-f0a8-4bcf-a6ef-293cf109ce07"),
                            Name = "TV & Home"
                        },
                        new
                        {
                            Id = new Guid("3b7a8617-2331-42e1-b69b-c1e92831cf28"),
                            Name = "Accessories"
                        });
                });

            modelBuilder.Entity("ProductManagement.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("products");
                });

            modelBuilder.Entity("ProductManagement.Entities.Product", b =>
                {
                    b.HasOne("ProductManagement.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
